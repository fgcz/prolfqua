% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Contrasts.R
\name{Contrasts}
\alias{Contrasts}
\title{Estimate contrasts using Wald Test}
\description{
Estimate contrasts using Wald Test

Estimate contrasts using Wald Test
}
\examples{

# Fitting mixed effects model to peptide data
istar <- prolfqua::sim_lfq_data_peptide_config()

modelFunction <-
strategy_lmer("abundance  ~ group_ + (1 | peptide_Id) + (1 | sample)")

config <- istar$config
config$table$hierarchy_keys_depth()

mod <- build_model(
 istar$data,
 modelFunction,
 subject_Id = config$table$hierarchy_keys_depth()
 )

prolfqua::model_summary(mod)
 Contr <- c("groupA_vs_Ctrl" = "group_A - group_Ctrl",
    "dil.e_vs_b" = "group_A - group_Ctrl" )
#Contrasts$debug("get_contrasts")
contrastX <- prolfqua::Contrasts$new(mod, Contr)
contrastX$get_contrasts()
contrastX$get_contrast_sides()
contrastX$column_description()

}
\seealso{
Other modelling: 
\code{\link{ContrastsMissing}},
\code{\link{ContrastsModerated}},
\code{\link{ContrastsPlotter}},
\code{\link{ContrastsProDA}},
\code{\link{ContrastsROPECA}},
\code{\link{ContrastsTable}},
\code{\link{INTERNAL_FUNCTIONS_BY_FAMILY}},
\code{\link{LR_test}()},
\code{\link{Model}},
\code{\link{build_model}()},
\code{\link{contrasts_fisher_exact}()},
\code{\link{get_anova_df}()},
\code{\link{get_complete_model_fit}()},
\code{\link{get_imputed_contrasts}()},
\code{\link{get_p_values_pbeta}()},
\code{\link{isSingular_lm}()},
\code{\link{linfct_all_possible_contrasts}()},
\code{\link{linfct_factors_contrasts}()},
\code{\link{linfct_from_model}()},
\code{\link{linfct_matrix_contrasts}()},
\code{\link{merge_contrasts_results}()},
\code{\link{model_analyse}()},
\code{\link{model_summary}()},
\code{\link{moderated_p_limma}()},
\code{\link{moderated_p_limma_long}()},
\code{\link{my_contest}()},
\code{\link{my_contrast}()},
\code{\link{my_contrast_V1}()},
\code{\link{my_contrast_V2}()},
\code{\link{my_glht}()},
\code{\link{pivot_model_contrasts_2_Wide}()},
\code{\link{plot_lmer_model_and_data}()},
\code{\link{plot_lmer_peptide_noRandom}()},
\code{\link{plot_lmer_peptide_predictions}()},
\code{\link{plot_lmer_predicted_interactions}()},
\code{\link{strategy_lmer}()},
\code{\link{summary_ROPECA_median_p.scaled}()}
}
\concept{modelling}
\section{Super class}{
\code{\link[prolfqua:ContrastsInterface]{prolfqua::ContrastsInterface}} -> \code{Contrast}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{models}}{Model}

\item{\code{contrasts}}{character with contrasts}

\item{\code{contrastfun}}{function to compute contrasts}

\item{\code{modelName}}{model name}

\item{\code{subject_Id}}{name of column containing e.g., protein Id's}

\item{\code{p.adjust}}{function to adjust p-values (default prolfqua::adjust_p_values)}

\item{\code{contrast_result}}{data frame containing results of contrast computation}

\item{\code{global}}{use a global linear function (determined by get_linfct)}

\item{\code{protein_annot}}{holds protein annotation}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Contrast-new}{\code{Contrasts$new()}}
\item \href{#method-Contrast-get_contrast_sides}{\code{Contrasts$get_contrast_sides()}}
\item \href{#method-Contrast-get_linfct}{\code{Contrasts$get_linfct()}}
\item \href{#method-Contrast-get_contrasts}{\code{Contrasts$get_contrasts()}}
\item \href{#method-Contrast-get_Plotter}{\code{Contrasts$get_Plotter()}}
\item \href{#method-Contrast-to_wide}{\code{Contrasts$to_wide()}}
\item \href{#method-Contrast-clone}{\code{Contrasts$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="prolfqua" data-topic="ContrastsInterface" data-id="column_description"><a href='../../prolfqua/html/ContrastsInterface.html#method-ContrastsInterface-column_description'><code>prolfqua::ContrastsInterface$column_description()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Contrast-new"></a>}}
\if{latex}{\out{\hypertarget{method-Contrast-new}{}}}
\subsection{Method \code{new()}}{
initialize
create Contrast
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Contrasts$new(
  model,
  contrasts,
  p.adjust = prolfqua::adjust_p_values,
  global = TRUE,
  modelName = "WaldTest"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{model}}{a dataframe with a structure similar to that generated by \code{\link{build_model}}}

\item{\code{contrasts}}{a character vector with contrast specificiation}

\item{\code{p.adjust}}{function to adjust the p-values}

\item{\code{global}}{development/internal argument (if FALSE determine linfct for each model.)}

\item{\code{modelName}}{name of contrast method, default WaldTest}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Contrast-get_contrast_sides"></a>}}
\if{latex}{\out{\hypertarget{method-Contrast-get_contrast_sides}{}}}
\subsection{Method \code{get_contrast_sides()}}{
get both sides of contrasts
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Contrasts$get_contrast_sides()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Contrast-get_linfct"></a>}}
\if{latex}{\out{\hypertarget{method-Contrast-get_linfct}{}}}
\subsection{Method \code{get_linfct()}}{
get linear functions from contrasts
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Contrasts$get_linfct(global = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{global}}{logical TRUE - get the a linear functions for all models, FALSE - linear function for each model}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Contrast-get_contrasts"></a>}}
\if{latex}{\out{\hypertarget{method-Contrast-get_contrasts}{}}}
\subsection{Method \code{get_contrasts()}}{
get table with contrast estimates
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Contrasts$get_contrasts(all = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{all}}{should all columns be returned (default FALSE)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
data.frame with contrasts
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Contrast-get_Plotter"></a>}}
\if{latex}{\out{\hypertarget{method-Contrast-get_Plotter}{}}}
\subsection{Method \code{get_Plotter()}}{
return \code{\link{ContrastsPlotter}}
creates Contrast_Plotter
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Contrasts$get_Plotter(FCthreshold = 1, FDRthreshold = 0.1)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{FCthreshold}}{fold change threshold to show in plots}

\item{\code{FDRthreshold}}{FDR threshold to show in plots}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{\link{ContrastsPlotter}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Contrast-to_wide"></a>}}
\if{latex}{\out{\hypertarget{method-Contrast-to_wide}{}}}
\subsection{Method \code{to_wide()}}{
convert to wide format
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Contrasts$to_wide(columns = c("p.value", "FDR"))}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{value column default p.value}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
data.frame
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Contrast-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Contrast-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Contrasts$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
